* {
    box-sizing: border-box;
}
piston {
    position: relative;
	counter-reset: line;
    display: block;
    background: #fffffc;
    width: 100%;
    margin: auto;
    color: #444;
    font-family: monospace;
    overflow: hidden;
    overflow-y: auto;
    padding: 4px 4px 4px 36px;
    border-top: solid 4px #ccc;
    border-bottom: solid 4px #ccc;
	min-height: 200px;
}

piston::before {
    content: "";
    position: absolute;
    left: 0px;
    top: 0px;
    bottom: 0px;
    width: 40px;
    height: 100%;
    background: #ddd;
    border-right: solid 4px #ccc;
    z-index: 0;
}
piston * {
    display: block;
    line-height: 17px;
}

piston content > * {
	display: inline-block;
	margin-right: 4px;
}

line,
container,
statement,
condition,
restriction,
tasks,
devices,
expression,
label[operator],
value {
    display: block;
    width: 100%;
    height: auto;
    padding-left: 12px;
}

statement > div,
conditions > div {
	width: 100%;
}

container {
    padding-left: 24px;
}

piston label {
    display: block;
    font-weight: bold;
    color: #07C;
    margin: 0px;
}

label[operand] {
    color: blue;
}

label[when] {
    margin-left: 32px;
}

label[group] {
    margin-left: -4px;
    color: blue;
}

statement,
condition,
restriction {
    width: 100%;
    height: auto;
    padding-left: 12px;
}
statement,
condition,
restriction {
    stroke-linecap: border-left: solid 8px red;
}

new {
    display: block;
    text-align: left;
    color: rgba(0, 0, 0, 0.2);
    padding-left: 12px;
}
new content::before {
    display: inline-block;
    content: "+" !important;
    padding: 0px 4px 0px 0px;
}

piston content {
    display: inline-block;
    cursor: pointer;
}

piston content[invalid=true] {
    color: red !important;
}

condition > content > span,
condition > content > operand,
condition > content > operator,
restriction > content > span,
restriction > content > operand,
restriction > content > operator {
    display: inline-block;
    margin-right: 4px
}
operand[device] {
    color: blueviolet;
}
operand[enum] {
    color: darkcyan;
}
operand[variable] {
    color: dodgerblue;
}
operator {
    color: #d70;
}

device {
    display: inline-block;
    color: blueviolet;
}

statement task > content {
    padding-left: 12px;
}
statement task > content::before {
    color: #ccc;
    content: "â–º";
    padding-right: 4px;
    font-size: 10px;
}

conditions > conditions,
restrictions > restrictions {
    margin-left: -0px;
}

conditions > div > label[operator]:last-of-type {
    display: none;
}



designer {
    display: block;
}
designer > header,
designer > footer {
    display: block;
    padding: 0px;
}
designer > header {
    margin-bottom: 16px;
}
designer > footer {
    margin-top: 16px;
}
designer > header > label {
    display: block;
    line-height: 48px;
    font-size: 18px;
}
designer > item {
    display: inline-block;
    width: 96px;
    height: 96px;
    border: solid 1px #ccc;
    border-radius: 4px;
    margin: 7px;
    text-align: center;
    line-height: 32px;
    font-size: 32px !important;
    padding: 16px 4px;
    cursor: pointer;
}
designer > item::after {
    margin-top: 16px;
    display: block;
    content: attr(title);
    font-size: 12px;
}
designer > item[selected] {
    background-color: #aaddff;
    cursor: default;
}
designer form .form-group.row label {
    padding-left: 32px;
    line-height: 32px;
}
designer form p {
    padding-left: 16px;
}
designer form a-ckolor {
    margin-top: 8px;
}
drag-handle {
    position: absolute;
    display: inline-block;
    left: 12px;
    top: 6px;
    width: 8px;
    overflow: hidden;
    margin-left: -20px;
    color: #ccc;
    cursor: move;
}

piston label::before,
piston devices::before,
piston line::before,
piston task::before,
piston expression::before,
piston value::before,
piston .dndPlaceholder::before,
piston new::before {
	position: absolute;
	counter-increment: line;
	left: 0px;
    color: #aaa;
    width: 32px;
    text-align: right;
	content: counter(line);
}

statement { display: flex !important; }

statement::before {
    content: "";
    float: left;
    display: inline-block;
    border-top: solid 1px;
    border-left: solid 1px;
    border-bottom: solid 1px;
    border-color: #07d;
    margin-right: 4px;
    margin-top: 8px;
    margin-bottom: 7px;
    width: 4px;
}

conditions { display:   flex !important; }

conditions::before {
    content: "";
    float: left;
    display: inline-block;
    border-top: solid 1px;
    border-left: solid 1px;
    border-bottom: solid 1px;
    border-color: #d70;
    margin-left: 12px;
    margin-right: -8px;
    margin-top: 8px;
    margin-bottom: 7px;
    width: 4px;
}


piston .dndPlaceholder::before {
	background: #07d;
	color: white;
}




@media (hover:hover) {
	statement:hover,
	conditions:hover {
	    background: rgba(0, 0, 0, 0.05);
	}

	new:hover {
	    color: rgba(0, 0, 0, 0.5);
	}

	designer > item:hover {
	    background: #ffddaa;
	}

}



@media only screen 
  and (min-device-width: 320px) 
  and (max-device-width: 568px)
  and (-webkit-min-device-pixel-ratio: 2) {

	piston * {
		line-height: 32px;
		font-size: 16px;
	}


	piston label,
	piston devices,
	piston line,
	piston task,
	piston expression,
	piston value,
	piston new {
		sborder-bottom: solid 1px #ccc;
	}

}